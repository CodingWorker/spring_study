<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">
    <bean id="useContainer" class="main.java.com.example.UseContainer">
        <!--根据类型注入构造参数
        <constructor-arg><bean class="main.java.com.example.UseItem"></bean></constructor-arg>-->

        <!--使用type说明注入参数的类型，不要求顺序
        <constructor-arg type="java.lang.Integer" value="10"/>
        <constructor-arg type="java.lang.String" value="jack" />-->

        <!--使用index指明注入构造参数，不要求顺序-->
        <constructor-arg index="0" value="apache" />
        <constructor-arg index="1" value="11"/>

        <!--使用setter 注入-->
        <property name="val_string" value="setter-string"/>
        <property name="val_int" value="15"/>

        <!--setter注入引用类型使用ref-->
        <property name="meta" ref="useMeta" />
        <property name="item" ref="useItem"/>
    </bean>
    <bean id="useItem" class="main.java.com.example.UseItem"></bean>
    <bean id="useMeta" class="main.java.com.example.UseMeta" />

    <!--使用jdbc-->
    <!--<bean id="useJDBC" class="main.java.com.example.UseJDBC">-->
        <!--&lt;!&ndash;<property name="driver" value="com.mysql.jdbc.Driver"></property>&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;<property name="driver"><value>com.mysql.jdbc.Driver</value></property>&ndash;&gt;&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="url" value="jdbc:mysql://localhost:3306/test?user=root;password=1234.asd"/>&ndash;&gt;-->
        <!--&lt;!&ndash;使用properties&ndash;&gt;-->
    <!--</bean>-->
    <!--内部bean-->
    <bean id="innerBean" class="main.java.com.example.InnerBean">
        <property name="innerBeanItem">
            <bean class="main.java.com.example.InnerBeanItem" />
        </property>
    </bean>
    <bean id="listDemo" class="main.java.com.example.ListDemo">
        <property name="nameList">
            <list>
                <value>Daniel</value>
                <value>Jack</value>
                <value>David</value>
            </list>
        </property>
        <property name="nameMap">
            <null/>
        </property>
        <!--空的value会给指定的参数注入""-->
        <property name="innerString"><value></value></property>
    </bean>
    <!--使用命名空间-->
    <bean id="usePNameSpace" class="main.java.com.example.UsePNameSpace"
          p:name="Daniel"
          p:age="12"
          p:email="xxx@example.com"
          p:pNameSpaceItem-ref="pNameSpaceItem"/>
    <bean id="pNameSpaceItem" class="main.java.com.example.PNameSpaceItem" />
    <!--lazy-init 设置为true可以控制延迟初始化-->
    <bean id="lazyInitDemo" class="main.java.com.example.LazyInitDemo" lazy-init="true"/>

    <!--使用注解-->
    <bean id="annocationDemo1" class="main.java.com.annocation.AnnocationDemo1" />
    <bean id="innerTestDemo" class="main.java.com.annocation.InnerTestDemo" />
    <bean id="autoWireDemo" class="main.java.com.annocation.AutoWireDemo" />

</beans>